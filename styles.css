:root {
    --input-border-color: hsl(187, 24%, 22%);
    --input-active-color: hsl(169, 82%, 27%);
    --input-error-color: hsl(0, 66%, 54%);
    --input-active-light-color: hsl(148, 38%, 91%);
    --white: hsl(0, 0%, 100%);
}

.consenterror {
    width: 100%;
}

body {
    margin: 0;
    box-sizing: border-box;
    font-family: "Karla", sans-serif;
}

.input-label {
    font-size: 16px;
}

.heading {
    margin: 0;
}

.accent-color-input {
    accent-color: var(--input-active-color);
}

.root {
    min-width: 100%;
    min-height: 100vh;
    background-color: var(--input-active-light-color);
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 100px 0px;
}

.card {
    min-width: 300px;
    width: 50%;
    background-color: var(--white);
    padding: 20px;
    border-radius: 10px;
}

.form {
    margin-top: 20px;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 10px;
}

.fullwidth {
    grid-column: 1/3;
}

.input-container {
    display: flex;
    justify-items: flex-start;
    flex-direction: column;
}

.checkbox-container {
    display: grid;
    grid-template-rows: 1fr 1fr;
    column-gap: 10px;
    padding: 10px 0;
    flex-wrap: wrap;
}

.input-container > input,
.input-container > textarea {
    padding: 10px;
    outline: none;
    box-sizing: border-box;
    resize: none;
    width: 100%;
    border-radius: 5px;
    border: 1px solid var(--input-border-color);
}

.input-container:has(> p.error.show) > input,
.input-container:has(> p.error.show) > textarea {
    border: 1px solid var(--input-error-color);
    display: block;
    color: black;
}

.input-container > input:focus,
.input-container > textarea:focus {
    border: 2px solid var(--input-active-color);
}

.radio-button {
    padding: 12px 10px;
    border-radius: 5px;
    border: 1px solid var(--input-border-color);
    width: 100%;
    display: flex;
    align-items: center;
    box-sizing: border-box;
}

/* Change background color of parent div when radio button is checked */
.radio-button:has(> input[type="radio"]:checked) {
    background-color: var(--input-active-light-color);
    border: 1px solid var(--input-active-color);
}

.error {
    color: var(--input-error-color);
    font-size: 0.75rem;
    display: none;
}

.show {
    display: block;
    margin: 0;
}

.radio-button > input {
    margin: 0;
    margin-right: 5px;
}

.button {
    background-color: var(--input-active-color);
    color: var(--white);
    outline: none;
    border: none;
    font-family: inherit;
    padding: 12px 20px;
}

.button:hover {
    filter: brightness(90%);
    cursor: pointer;
}

@media screen and (max-width: 600px) {
    .form {
        grid-template-columns: 1fr;
    }
    .fullwidth {
        grid-column: 1/2;
    }
}

/* The snackbar - position it at the bottom and in the middle of the screen */
#snackbar {
    visibility: hidden; /* Hidden by default. Visible on click */
    min-width: 250px; /* Set a default minimum width */
    margin-left: -125px; /* Divide value of min-width by 2 */
    background-color: var(--input-active-color); /* Black background color */
    color: var(--white); /* White text color */
    text-align: center; /* Centered text */
    border-radius: 10px; /* Rounded borders */
    padding: 30px; /* Padding */
    position: fixed; /* Sit on top of the screen */
    z-index: 1; /* Add a z-index if needed */
    left: 50%; /* Center the snackbar */
    top: 30px; /* 30px from the bottom */
}

/* Show the snackbar when clicking on a button (class added with JavaScript) */
#snackbar.show {
    visibility: visible; /* Show the snackbar */
    /* Add animation: Take 0.5 seconds to fade in and out the snackbar.
  However, delay the fade out process for 2.5 seconds */
    -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
    animation: fadein 0.5s, fadeout 0.5s 2.5s;
}

/* Animations to fade the snackbar in and out */
@-webkit-keyframes fadein {
    from {
        top: 0;
        opacity: 0;
    }
    to {
        top: 30px;
        opacity: 1;
    }
}

@keyframes fadein {
    from {
        top: 0;
        opacity: 0;
    }
    to {
        top: 30px;
        opacity: 1;
    }
}

@-webkit-keyframes fadeout {
    from {
        top: 30px;
        opacity: 1;
    }
    to {
        top: 0;
        opacity: 0;
    }
}

@keyframes fadeout {
    from {
        top: 30px;
        opacity: 1;
    }
    to {
        top: 0;
        opacity: 0;
    }
}

.toast-container {
    border-radius: 10px;
    display: flex;
    justify-content: left;
    gap: 10px;
}
